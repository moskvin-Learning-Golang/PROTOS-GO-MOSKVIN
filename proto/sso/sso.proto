syntax = "proto3";

package auth; // пространство имен

import "validate/validate.proto";

option go_package = "tuzov.sso.v1;ssov1";

service Auth { 
	// сервис авторизации в сервисе sso
	// команда для генерации:
	// protoc -I proto proto/sso/sso.proto --go_out = ./gen/go/sso --go_opt=paths=source_relative --go-grpc_out=./gen/go/sso --go-grpc_opt=paths=source_relative
	// РАБОЧАЯ КОМАНДА НИЖЕ
	// protoc -I=proto proto/sso/sso.proto --go_out=./gen/go/sso --go_opt=paths=source_relative --go-grpc_out=./gen/go/sso --go-grpc_opt=paths=source_relative 
	// эта команда не генерирует лишнюю подпапку
	// protoc -I=proto proto/sso/sso.proto --go_out=./gen/go/sso --go_opt=paths=source_relative --go-grpc_out=./gen/go/sso --go-grpc_opt=paths=source_relative
	
	// НОВАЯ КОМАНДА 20 АВГУСТА
	// protoc -I=PROTOS-GO-MOSKVIN/proto -I="C:/Users/Moskv/Documents/dev/golang learn/protoc-gen-validate" PROTOS-GO-MOSKVIN/proto/sso/sso.proto --go_out=PROTOS-GO-MOSKVIN/gen/go --go_opt=paths=source_relative --go-grpc_out=PROTOS-GO-MOSKVIN/gen/go --go-grpc_opt=paths=source_relative --validate_out="lang=go:PROTOS-GO-MOSKVIN/gen/go"
	
	//описываем ручки Api за которые мы будем дергать


	rpc Register (RegisterRequest) returns (RegisterResponse);
	rpc Login (LoginRequest) returns (LoginResponse);
	rpc IsAdmin (IsAdminRequest) returns (IsAdminResponse);
}

message RegisterRequest {
	string email = 1;
	string password = 2;
}

message RegisterResponse {
	int64 user_id = 1;
}

message LoginRequest {
	string email = 1 [(validate.rules).string = {email: true}];
	string password = 2;
	int32 app_id =3;
}

message LoginResponse {
	string token = 1;
}

message IsAdminRequest {
	int64 user_id = 1;
}

message IsAdminResponse {
	bool is_admin = 1;
}


